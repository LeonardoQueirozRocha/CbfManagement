// <auto-generated />
using System;
using Cbf.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cbf.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220627225935_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Cbf.Business.Models.Jogador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Posicao")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("Salario")
                        .HasColumnType("decimal(10,2)");

                    b.Property<Guid>("TimeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TimeId");

                    b.ToTable("Jogadores", (string)null);
                });

            modelBuilder.Entity("Cbf.Business.Models.Time", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Estadio")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("Fundacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Localidade")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Tecnico")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Times", (string)null);
                });

            modelBuilder.Entity("Cbf.Business.Models.Transferencia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("JogadorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TimeDestinoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TimeOrigemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("JogadorId");

                    b.HasIndex("TimeOrigemId");

                    b.ToTable("Transferencias", (string)null);
                });

            modelBuilder.Entity("Cbf.Business.Models.Jogador", b =>
                {
                    b.HasOne("Cbf.Business.Models.Time", "Time")
                        .WithMany("Jogadores")
                        .HasForeignKey("TimeId")
                        .IsRequired();

                    b.Navigation("Time");
                });

            modelBuilder.Entity("Cbf.Business.Models.Transferencia", b =>
                {
                    b.HasOne("Cbf.Business.Models.Jogador", "Jogador")
                        .WithMany("Transferencias")
                        .HasForeignKey("JogadorId")
                        .IsRequired();

                    b.HasOne("Cbf.Business.Models.Time", "Time")
                        .WithMany("Transferencias")
                        .HasForeignKey("TimeOrigemId")
                        .IsRequired();

                    b.Navigation("Jogador");

                    b.Navigation("Time");
                });

            modelBuilder.Entity("Cbf.Business.Models.Jogador", b =>
                {
                    b.Navigation("Transferencias");
                });

            modelBuilder.Entity("Cbf.Business.Models.Time", b =>
                {
                    b.Navigation("Jogadores");

                    b.Navigation("Transferencias");
                });
#pragma warning restore 612, 618
        }
    }
}
